import { useTranslation } from 'react-i18next';

import React, { memo, useCallback, useEffect, useState } from 'react';
import { classNames } from 'shared/lib/classNames/classNames';
import cls from './MainPage.module.scss';
import Textarea from 'shared/UI/Textarea/Textarea';
import TaskCreator from 'entities/TaskTracker/UI/TaskCreator/TaskCreator';
import { GroupCreatorModal, createGroup } from 'entities/Community';
import { useAppDispatch } from 'shared/lib/hooks/useAppDispatch';
import Button from 'shared/UI/Button/Button';
import Text from 'shared/UI/Text/Text';
import { Page } from 'widgets/Page';
import ArticleTextBlock from 'entities/Article/UI/ArticleTextBlock/ArticleTextBlock';
import { ArticleBlockType } from 'entities/Article/types/article';
interface MainPageProps {
  className?: string;
}

const block = {
  type: ArticleBlockType.TEXT,
  paragraphs: [
    `Зачем нужна геймификация жизненных целей и привычек? Почему появлись такие явления как move to earn? Кому выгодно, чтоб я больше двигался и был здоровым и успешным? почти никому. Хотя в долгосрочной перспективе, это выгодно всему человечеству, но хочется обратить внимание на то, что сейчас это нужно только тебе, если ты это осознаешь. Но если не возникло пока внутренней мотивации, что делать и зачем, можно “продать” тебе внешнюю. Для альтруистов в принципе выгодно, чтоб все занимались спортом и были здоровыми, умными, богатыми и тд, поэтому нам надо создавать такие проекты в будущем, которые объединяют в себе и внутреннюю мотивацию, и внешнюю, чтобы можно было и монетизировать, и получать well-being profit.`,
    `Суть моего приложения в том, чтобы применить научные знания из области психологии, нейробиологии, да и антропологии в целом тоже, чтобы увеличить максимально вероятность выполнения собственных дел и прививания себе полезных привычек. Сейчас я кратко опишу, какими это методами делается: Итак, при регистрации каждый пользователь получает своего персонажа, у которого есть здоровье, уровень и поинты, как в RPG играх. За выполнение каждого дела начисляются поинты, когда они достигают отметки в 1000, происходит ЛевелАп, а очки обнуляются. Здоровье теряется, если долго не делать дела, а если опустится до 0, то -1 уровень. Все это реализовано для того, чтобы выполнение своих дел совместить с инстинктивной радостью приобретения неких ресурсов(и, как следствие, выработка в мозгу дофамина, который влияет на обучаемость и мотивацию), пускай и виртуальных баллов и монет(пока не придумал, что на них покупать, но они тоже начисляются).`,
    `Далее, очень важным аспектом приложения является возможность участия в сообществах и коллективных событиях(Испытаниях). Поскольку люди - социальные животные, мы всегда испытываем в разы больше мотивации заниматься чем-либо, если это одобряют наши друзья, семья, общество в целом, если с нами это делают вместе, нам гораздо проще продолжать деятельность, а если мы даже делаем это лучше других, сюда подключается еще и мотивация сохранить свое высокое положение в иерархии, что крайне эффективно стимулирует поведение. А именно это нам и нужно: собраться вместе, договориться о деятельности, которую одобряет группа, например, зарядка по утрам, пробежки, регулярное обучение иностранных языков, и вступить в Испытание, которое подразумевает, что в выбранный период времени каждый участник должен каждый день делать то, что выбрано целью. И каждый день те, кто выпоняет, получают виртуальную награду и также видят себя в таблице Лидеров. Поэтому в приложении реализован функционал создания сообществ по интересам, по ценностям, и создания Испытаний, челленджей, в которых можно коллективно участвовать. Мы также делаем сервис для постинга статей, так как в приложении есть сообщества, а каждое сообщество является в своей сути полноценным блогом, где должен быть полезный контент, связанный с родом их деятельности, их интересами и мировоззрением. Будем создавать базу знаний по самым разным областям через статьи в сообществах.`,
  ],
  title:
    'Добро пожаловать в приложение для отслеживания своих привычек и дел с элементами геймификации!',
  id: 'lsdvnfwlekfnwej',
};

const MainPage: React.FC<MainPageProps> = memo(({ className }) => {
  const { t } = useTranslation('main');

  return (
    <Page className={classNames(cls.MainPage, {}, [className as string])}>
      <div className={cls.textWrapper}>
        {/* <Text
          title="Добро пожаловать в приложение для отслеживания своих привычек и дел
        с элементами геймификации!"
        /> */}
        {/* @ts-ignore */}
        <ArticleTextBlock block={block} />
      </div>
    </Page>
  );
});

export default MainPage;
